{"version":3,"sources":["billing.js","estimate.js","location.js","payment.js","cart-drawer.js","header.js","payment-overlay.js","product-layout-favorite.js","category.js","wishlist.js","utility.js","checkout-init.js","checkout-logic.js","checkout-validation.js","cart-drawer-logic.js","cart-drawer-init.js","wishlist-logic.js","init.js"],"names":["billingContainer","autoFillBillingAddress","fields","fieldWithRules","$","is","id","substring","length","val","value","i","indexOf","genericInput","setDifferentBillingAddress","self","on","width","outerWidth","this","checked","fadeOut","addClass","hide","removeClass","fadeIn","clearBillingAddress","init","estimateContainer","ajaxCall","ajax","type","url","ApiEndpoints","estimate","data","email","shipping","products","UtilityContainer","getProductsFromLocalStorage","shipping_address","getShippingFromForm","success","console","log","error","e","status","window","location","replace","html","getShipmentTaxes","serviceCode","taxes","services","method","j","amount","toFixed","displayEstimatePanel","scrollTopToEstimate","animate","scrollTop","offset","top","fetchEstimate","shippingLength","serviceDOM","name","transit","delivery","price","btoa","JSON","stringify","append","text","Localization","selectDefaultShipmentMethod","paymentContainer","defaultShipment","availableShipment","dataset","reload","locationContainer","populateCountry","lang","file","listItems","$country","getJSON","each","key","done","chosen","populateProvincesAndStates","country","callback","$province","find","updateChosenSelects","chosenCountry","input","removeAttr","trigger","attr","callUpdateChosenSelects","displayPaymentPanel","initPaymentPanel","subtotal","parseFloat","getProductsPriceFromLocalStorage","priceTransport","getTaxes","total","updatePaymentPanel","dataTaxesLength","checkoutLogicContainer","cartDisplayContainer","$el","$back","$proceed","$trigger","$container","$checkout","$body","displayOn","_width","css","margin-right","click","animateIn","displayOff","animateOut","sessionStorage","isDisplayed","show","setCartItemsHeight","computeCartItemsHeight","cartItemsHeight","height","headerContainer","md","removeCartDescription","sm","btnTransform_sm","changeTextFromDropdown","$elem","semanticUI","initDropdownModule","dropdown","action","paymentOverlayContainer","cancelOrder","Cookies","remove","removeAllProductsFromLocalStorage","checkPendingOrders","get","order","parse","orders","view","verification","showPaymentNotice","prepend","pending_order","what_to_do","pay","pay_now","cancel_order","productLayoutFavoriteContainer","fadeInFavoriteIcon","hover","children","setWishlistBadgeQuantity","getNumberOfProductsInWishlist","addToFavorite","item","hasClass","removeFromFavorite","buyButton_to_Json","parent","localStorage","setItem","product","persistFavorite","lastIndexOf","getItem","parseInt","className","element","context","removeItem","categoryContainer","searchParameters","page","per_page","min_price","max_price","brands","categories","blurBackground","blurjs","source","itemsPerPage","URL_add_parameter","sortBy","priceUpdate","categoriesUpdate","brandsUpdate","toggleLayout","$product","$product_img","$product_buybutton","toggleClass","escape","kvp","document","search","substr","split","x","join","retrieveSearchParameters","query","index","pair","wishlistContainer","setNumberOfProductsInHeader","quantity","res","productId","productQuantity","productPrice","push","getNumberOfProducts","postcode","province","line1","line2","city","phone","thumbnail","thumbnail_lg","link","validateEmptyFields","emptyFields","passed","validateEmail","re","test","validatePostCode","match","validateEmptyCart","empty","addErrorClassToFields","bind","unbind","addErrorClassToFieldsWithRules","addFadeOutUpClass","$element","delay","queue","clearQueue","removeErrorClassFromFields","getCheapestShippingMethod","sortedShipmentByPrice","sort","a","b","fare","getCartTaxes","shippingTaxes","totalTaxes","getCartTotal","checkoutInitContainer","estimateButtonClick","shippingFirstName","shippingLastName","shippingAddress1","shippingCity","shippingCountry","billingFirstName","billingLastName","billingAddress1","billingCity","billingCountry","shippingInformation","postcodeInput","preventDefault","billingInformation","checkoutValidationContainer","focus","createOrdersCookie","paymentId","paymentVerification","set","placeOrderAjaxCall","placeOrder","serialize","cache","history","pushState","payment_details","payment_url","xhr","hidePanels","updateEstimateButtonValue","update","removeErrorClassFromEmail","removeErrorClassFromPostcode","tooltip","cartLogicContainer","$list","addItem","sidebarElement","storeItem","setBadgeQuantity","setQuantityCookie","setCartSubtotal","setCartTotal","updateAjaxCall","loadItem","deleteItem","$parent","closest","one","modifyQuantity","$product_price","oldData","modifyQuantityBeforeBuying","next","number","undefined","setCartShipping","setCartTaxes","complete","calculate","setTimeout","cartDrawerInitContainer","buyButtonClick","getEstimateClick","wishlistLogicContainer","createWishlistElement","Math","round","localizeWishlistButton","renderWishlist","add_cart","wishlist_remove","removeWishlistElement","ready","ajaxSetup","headers","X-CSRF-TOKEN","locale","TouchSpin","initval"],"mappings":"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","file":"boukem2.js","sourcesContent":["/**\r\n * Object responsible for handling billing information.\r\n *\r\n * @type {{autoFillBillingAddress: Function, setDifferentBillingAddress: Function, clearBillingAddress: Function, init: Function}}\r\n */\r\nvar billingContainer = {\r\n\r\n    /**\r\n     * Fill the billing address with the shipping address.\r\n     * First parameter is an array of all fields that only need basic validation (empty or not)\r\n     * Second parameter is an input that requires more advanced verification (postcode)\r\n     *\r\n     *\r\n     * @param fields\r\n     * @param fieldWithRules\r\n     */\r\n    autoFillBillingAddress : function(fields, fieldWithRules) {\r\n        if($(\".billing-checkbox\").is(\":checked\"))\r\n        {\r\n            //We assume here that fieldWithRules is the shipping postcode.\r\n            $(\"#billing\" + fieldWithRules[0].id.substring(\"shipping\".length, fieldWithRules[0].id.length)).val(fieldWithRules[0].value);\r\n\r\n            for(var i= 0, length = fields.length; i<length; i++) {\r\n                //check if the id has the string \"shipping\".\r\n                //if it does, delete the shipping prefix and replace it by billing.\r\n                //Create a new jquery selector and fill it with the value of the shipping one.\r\n                if (fields[i][0].id.indexOf(\"shipping\") > -1) {\r\n                    var genericInput = fields[i][0].id.substring(\"shipping\".length, fields[i][0].id.length);\r\n                    $(\"#billing\" + genericInput).val(fields[i][0].value);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get user's billing address. By default shipping address = billing address.\r\n     * Set the width of select list at the same time.\r\n     *\r\n     */\r\n    setDifferentBillingAddress : function (self) {\r\n        $(\".billing-checkbox\").on(\"change\", function() {\r\n            $(\".form-billing .chosen-container\").width($(\"#customer_email\").outerWidth()-20);\r\n\r\n            if (!this.checked) {\r\n                $(\".form-billing\").hide().removeClass(\"hidden\").fadeIn();\r\n                self.clearBillingAddress();\r\n            }\r\n            else {\r\n                $(\".form-billing\").fadeOut(function() {\r\n                    $(this).addClass(\"hidden\");\r\n                });\r\n            }\r\n        })\r\n    },\r\n\r\n    /**\r\n     * Clear the billing form.\r\n     *\r\n     */\r\n    clearBillingAddress : function() {\r\n        if ($(\".form-billing input\").val() != \"\") {\r\n            $(\".form-billing input\").val() == \"\";\r\n        }\r\n    },\r\n\r\n    init: function() {\r\n        var self = billingContainer;\r\n\r\n        self.setDifferentBillingAddress(self);\r\n    }\r\n}","/**\r\n * Object responsible for handling the estimation of user's purchase.\r\n *\r\n * @type {{ajaxCall: Function, getShipmentTaxes: Function, displayEstimatePanel: Function, fetchEstimate: Function, init: Function}}\r\n */\r\nvar estimateContainer = {\r\n\r\n    /**\r\n     * Ajax call to /api/estimate after all verifications have passed.\r\n     *\r\n     */\r\n    ajaxCall : function() {\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: ApiEndpoints.estimate,\r\n            data: {\r\n                email: $(\"#customer_email\").val(),\r\n                shipping: {},\r\n                products: UtilityContainer.getProductsFromLocalStorage(),\r\n                shipping_address: UtilityContainer.getShippingFromForm()\r\n            },\r\n            success: function(data) {\r\n                console.log(data);\r\n                estimateContainer.init(data);\r\n            },\r\n            error: function(e, status) {\r\n                if (e.status == 403){\r\n                    // TODO: replace with an actual link\r\n                    window.location.replace(\"/auth/login\");\r\n                    return;\r\n                }\r\n                $('#estimate').html('<div class=\"alert alert-danger\">Une erreur est survenue. Veuillez vérifier les informations fournies.</div>');\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Get the relevant taxes according to the chosen shipping method.\r\n     *\r\n     * @param serviceCode\r\n     * @param data\r\n     * @returns {string}\r\n     */\r\n    getShipmentTaxes : function(serviceCode, data) {\r\n        var taxes = 0;\r\n\r\n        for(var i=0; i<data.shipping.services.length; i++)\r\n        {\r\n            if(data.shipping.services[i].method == serviceCode)\r\n            {\r\n                if (data.shipping.services[i].taxes.length != 0)\r\n                {\r\n                    for(var j=0; j<data.shipping.services[i].taxes.length; j++)\r\n                    {\r\n                        taxes += data.shipping.services[i].taxes[j].amount;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return taxes.toFixed(2);\r\n    },\r\n\r\n    /**\r\n     * Display the estimate panel\r\n     *\r\n     */\r\n    displayEstimatePanel : function() {\r\n        $(\"#estimate\").removeClass(\"hidden fadeOutUp\").addClass(\"animated fadeInDown\");\r\n    },\r\n\r\n    /**\r\n     * Utility function to scroll the body to the estimate table\r\n     *\r\n     */\r\n    scrollTopToEstimate : function() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\"#estimate\").offset().top\r\n        }, 1000);\r\n    },\r\n\r\n    /**\r\n     * Populate the shipping methods table with the data received after the api call.\r\n     *\r\n     * @param data\r\n     */\r\n    fetchEstimate : function(data, self) {\r\n        $(\".has-error\").removeClass(\"has-error\");\r\n\r\n        var email_value = $(\"#customer_email\").val();\r\n        var postcode_value = $(\"#shippingPostcode\").val();\r\n        var country_value = $(\".country\").val();\r\n\r\n        for(var i = 0, shippingLength = data.shipping.services.length; i<shippingLength; i++)\r\n        {\r\n            var serviceDOM = \"<tr data-service='\" + data.shipping.services[i].method + \"'>\" +\r\n                \"<td>\" + data.shipping.services[i].name + \"</td>\" +\r\n                \"<td>\" + data.shipping.services[i].transit + \"</td>\" +\r\n                \"<td>\" + data.shipping.services[i].delivery + \"</td>\" +\r\n                \"<td>\" + data.shipping.services[i].price + \"</td>\" +\r\n                \"<td>\" +\r\n                \"<input \" +\r\n                \"type='radio' \" +\r\n                \"name='shipping' \" +\r\n                \"class='shipping_method' \" +\r\n                \"data-taxes='\" + self.getShipmentTaxes(data.shipping.services[i].method, data) + \"' \" +\r\n                \"data-cost='\" + data.shipping.services[i].price + \"' \" +\r\n                \"data-value='\" + data.shipping.services[i].method + \"' \" +\r\n                \"value='\" + btoa(JSON.stringify(data.shipping.services[i])) + \"' >\" +\r\n                \"</td>\";\r\n\r\n            $(\"#estimate .table-striped\").append(serviceDOM);\r\n        }\r\n\r\n        $(\"#estimateButton\").removeClass(\"btn-three\").addClass(\"btn-one\").text(Localization.continue);\r\n        self.selectDefaultShipmentMethod();\r\n\r\n        self.scrollTopToEstimate();\r\n\r\n        paymentContainer.init(data);\r\n    },\r\n\r\n    /**\r\n     * Select the default shipment method from a predefined list.\r\n     *\r\n     */\r\n    selectDefaultShipmentMethod : function() {\r\n        var defaultShipment = [\"DOM.EP\", \"USA.TP\", \"INT.TP\"],\r\n            availableShipment = $(\"input[name=shipping]\");\r\n\r\n        for(var i= 0, length = availableShipment.length; i<length; i++)\r\n        {\r\n            if (defaultShipment.indexOf(availableShipment[i].dataset.value) != -1)\r\n            {\r\n                availableShipment[i].checked = true;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Registers functions to be called outside of this object.\r\n     *\r\n     * @param data\r\n     */\r\n    init : function(data) {\r\n        var self = estimateContainer;\r\n\r\n        if (UtilityContainer.getProductsFromLocalStorage().length == 0)\r\n        {\r\n            location.reload();\r\n        }\r\n        else\r\n        {\r\n            self.displayEstimatePanel();\r\n            self.fetchEstimate(data, self);\r\n        }\r\n    }\r\n\r\n}","/**\r\n * Object responsible for building the select list populating countries, provinces and states on checkout page.\r\n *\r\n * @type {{populateCountry: Function, populateProvincesAndStates: Function, updateChosenSelects: Function, callUpdateChosenSelects: Function, init: Function}}\r\n */\r\nvar locationContainer = {\r\n\r\n    /**\r\n     * Function to populate country list\r\n     * Activates the chosen plugin on the country select list.\r\n     *\r\n     */\r\n    populateCountry : function (lang) {\r\n        var file = \"/js/data/country-list.\" + lang + \".json\",\r\n            listItems = '',\r\n            $country = $(\".country\");\r\n\r\n        $.getJSON(file, function(data) {\r\n            $.each(data, function(key, val) {\r\n                if (key == \"CA\") {\r\n                    listItems += \"<option value='\" + key + \"' selected>\" + val + \"</option>\";\r\n                }\r\n                else {\r\n                    listItems += \"<option value='\" + key + \"'>\" + val + \"</option>\";\r\n                }\r\n            });\r\n            $country.append(listItems);\r\n        }).done(function() {\r\n            $(\".country\").chosen();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Function to populate provinces and states\r\n     * Activates the chosen plugin on the province select list.\r\n     *\r\n     * @param country\r\n     * @param callback\r\n     */\r\n    populateProvincesAndStates : function (country, callback) {\r\n        $.getJSON(\"/js/data/world-states.json\", function(data) {\r\n            for(var i= 0, length = country.length; i<length; i++) {\r\n                var listItems = '',\r\n                    $province = $(\".province\").find(\"[data-country='\" + country[i] +\"']\");\r\n\r\n                $.each(data, function(key)\r\n                {\r\n                    if (data[key].country === country[i] && data[key].short == \"QC\" ){\r\n                        listItems += \"<option value='\" + data[key].short + \"' selected>\" + data[key].name + \"</option>\";\r\n                    }\r\n                    else if (data[key].country === country[i]){\r\n                        listItems += \"<option value='\" + data[key].short + \"'>\" + data[key].name + \"</option>\";\r\n                    }\r\n                });\r\n                $province.append(listItems);\r\n            }\r\n            callback();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Event function enabling or disabling postcode and province fields according to the chosen country and the provided input (shipping or billing)\r\n     *\r\n     * @param chosenCountry\r\n     * @param input\r\n     */\r\n    updateChosenSelects: function(chosenCountry, input) {\r\n        if (chosenCountry == 'CA' || chosenCountry == 'US' || chosenCountry == \"MX\"){\r\n            $(input).removeAttr('disabled').trigger(\"chosen:updated\");\r\n        } else {\r\n            $(input).attr('disabled','disabled');\r\n        }\r\n\r\n        $(input + ' optgroup').attr('disabled','disabled');\r\n\r\n        if (chosenCountry == 'CA' || chosenCountry == 'US' || chosenCountry == 'MX'){\r\n            $(input + ' [data-country=\"' + chosenCountry + '\"]').removeAttr('disabled');\r\n\r\n        }\r\n\r\n        $(input).trigger('chosen:updated');\r\n    },\r\n\r\n    /**\r\n     * Triggers updateChosenSelects($country, $input)\r\n     * This function will be registered in init().\r\n     *\r\n     */\r\n    callUpdateChosenSelects: function(self) {\r\n        $(\"#billingCountry\").on(\"change\", function() {\r\n            self.updateChosenSelects($(this).val(), \"#billingProvince\");\r\n        });\r\n\r\n        $(\"#shippingCountry\").on(\"change\", function() {\r\n            self.updateChosenSelects($(this).val(), \"#shippingProvince\");\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Registering functions to be called outside of this object.\r\n     *\r\n     */\r\n    init : function() {\r\n        var self = locationContainer;\r\n\r\n        self.populateCountry($(\"html\").attr(\"lang\"));\r\n        self.populateProvincesAndStates([\"CA\", \"US\", \"MX\"], function() {\r\n            $(\".province\").chosen();\r\n        });\r\n        self.callUpdateChosenSelects(self);\r\n\r\n    }\r\n}","/**\r\n * Object responsible for handling the payment panel.\r\n *\r\n * @type {{displayPaymentPanel: Function, initPaymentPanel: Function, updatePaymentPanel: Function, getTaxes: Function, init: Function}}\r\n */\r\nvar paymentContainer = {\r\n    /**\r\n     * Displays the Payment panel.\r\n     *\r\n     */\r\n    displayPaymentPanel : function() {\r\n        $(\"#payment\").removeClass(\"hidden fadeOutUp\").addClass(\"animated fadeInDown\");\r\n        $(\"#checkoutButton\").addClass(\"animated rubberBand\");\r\n    },\r\n\r\n    /**\r\n     * Populate the payment panel with default values.\r\n     *\r\n     * @param data\r\n     */\r\n    initPaymentPanel : function(data) {\r\n        var subtotal = parseFloat(UtilityContainer.getProductsPriceFromLocalStorage()).toFixed(2),\r\n            priceTransport = $(\"input:radio.shipping_method:checked\").data(\"cost\"),\r\n            taxes = paymentContainer.getTaxes(data) + parseFloat($(\"input:radio.shipping_method:checked\").data(\"taxes\")),\r\n            total = parseFloat(subtotal) + parseFloat(priceTransport) + parseFloat(taxes);\r\n\r\n        $(\"#price_subtotal\").text(subtotal);\r\n        $(\"#price_transport\").text(priceTransport);\r\n        $(\"#price_taxes\").text(taxes.toFixed(2));\r\n        $(\"#price_total\").text(total.toFixed(2));\r\n    },\r\n\r\n    /**\r\n     * Update the payment panel with right values (shipping method)\r\n     *\r\n     * @param data\r\n     */\r\n    updatePaymentPanel : function(data) {\r\n        var subtotal = parseFloat(UtilityContainer.getProductsPriceFromLocalStorage()).toFixed(2),\r\n            priceTransport, taxes;\r\n\r\n        $(\".shipping_method\").on(\"change\", function() {\r\n            priceTransport = $(this).data(\"cost\");\r\n            taxes = paymentContainer.getTaxes(data) + parseFloat($(this).data(\"taxes\"));\r\n            total = parseFloat(subtotal) + parseFloat(priceTransport) + parseFloat(taxes);\r\n\r\n            $(\"#price_subtotal\").text(subtotal);\r\n            $(\"#price_transport\").text(priceTransport);\r\n            $(\"#price_taxes\").text(taxes.toFixed(2));\r\n            $(\"#price_total\").text(total.toFixed(2));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Get the total taxes (TPS/TVQ or TVH or TPS or null) + shipping method taxes.\r\n     *\r\n     * @param data\r\n     * @returns {number}\r\n     */\r\n    getTaxes : function(data) {\r\n        var taxes = 0,\r\n            dataTaxesLength = data.taxes.length;\r\n\r\n        if (dataTaxesLength != 0)\r\n        {\r\n            for(var i=0; i<dataTaxesLength; i++)\r\n            {\r\n                taxes += data.taxes[i].amount;\r\n            }\r\n        }\r\n        return taxes;\r\n    },\r\n\r\n    /**\r\n     * Register methods for outside calling.\r\n     *\r\n     * @param data\r\n     */\r\n    init : function(data) {\r\n        paymentContainer.displayPaymentPanel();\r\n        paymentContainer.initPaymentPanel(data);\r\n        paymentContainer.updatePaymentPanel(data);\r\n\r\n        checkoutLogicContainer.init();\r\n    }\r\n}","/**\r\n * Object responsible for displaying the cart drawer.\r\n * Logic handled in dev/actions/layout/cart-drawer-logic.js\r\n *\r\n * @type {{$el: {$back: (*|jQuery|HTMLElement), $proceed: (*|jQuery|HTMLElement), $trigger: (*|jQuery|HTMLElement), $container: (*|jQuery|HTMLElement), $checkout: (*|jQuery|HTMLElement), $body: (*|jQuery|HTMLElement)}, displayOn: Function, displayOff: Function, animateIn: Function, animateOut: Function, setCartItemsHeight: Function, computeCartItemsHeight: Function, init: Function}}\r\n */\r\nvar cartDisplayContainer = {\r\n    $el : {\r\n        $back : $(\"#back\"),\r\n        $proceed : $(\"#proceed\"),\r\n        $trigger : $(\".view-cart\"),\r\n        $container : $(\"#cart-container\"),\r\n        $checkout : $(\"#checkout\"),\r\n        $body : $(\"body\")\r\n    },\r\n\r\n    displayOn: function() {\r\n        var _width = cartDisplayContainer.$el.$container.width();\r\n        cartDisplayContainer.$el.$container.css( {\r\n            \"margin-right\" : -_width\r\n        });\r\n\r\n        cartDisplayContainer.$el.$trigger.click(function() {\r\n            cartDisplayContainer.animateIn();\r\n        });\r\n    },\r\n\r\n    displayOff : function() {\r\n        cartDisplayContainer.$el.$back.click(function() {\r\n            cartDisplayContainer.animateOut();\r\n        });\r\n        cartDisplayContainer.$el.$checkout.click(function() {\r\n            sessionStorage.isDisplayed = false;\r\n        });\r\n    },\r\n\r\n    animateIn : function() {\r\n        cartDisplayContainer.$el.$container.show();\r\n        cartDisplayContainer.$el.$container.animate( {\r\n            \"margin-right\" : 0\r\n        }, 400);\r\n        sessionStorage.isDisplayed = true;\r\n    },\r\n\r\n    animateOut: function() {\r\n        var _width = cartDisplayContainer.$el.$container.width();\r\n        cartDisplayContainer.$el.$container.animate( {\r\n            \"margin-right\" : -_width\r\n        }, 400, function() {\r\n            $(this).hide();\r\n        });\r\n        sessionStorage.isDisplayed = false;\r\n    },\r\n\r\n    setCartItemsHeight : function() {\r\n        cartDisplayContainer.computeCartItemsHeight();\r\n\r\n        $(window).on(\"resize\", function() {\r\n            cartDisplayContainer.computeCartItemsHeight();\r\n        });\r\n\r\n        cartDisplayContainer.$el.$trigger.on(\"click\", function() {\r\n            cartDisplayContainer.computeCartItemsHeight();\r\n        })\r\n    },\r\n\r\n    computeCartItemsHeight : function() {\r\n        var cartItemsHeight = $(\"#cart-container\").height() - ($(\".cart-header\").height() + $(\".cart-footer\").height());\r\n\r\n        $(\"#cart-items\").css(\"height\", cartItemsHeight);\r\n    },\r\n\r\n    init : function() {\r\n        cartDisplayContainer.displayOn();\r\n        cartDisplayContainer.displayOff();\r\n        UtilityContainer.populateCountry($(\"html\").attr(\"lang\"));\r\n\r\n        if (sessionStorage.isDisplayed == \"true\")\r\n        {\r\n            cartDisplayContainer.$el.$container.css(\"margin-right\", 0);\r\n            cartDisplayContainer.$el.$container.show();\r\n        }\r\n\r\n    }\r\n};","/**\r\n * Object responsible for displaying the navigation header.\r\n *\r\n * @type {{md: {removeCartDescription: Function}, sm: {btnTransform_sm: Function}, init: Function}}\r\n */\r\nvar headerContainer = {\r\n    /**\r\n     * Desktop size\r\n     *\r\n     */\r\n    md: {\r\n        removeCartDescription : function() {\r\n            if ($(window).width() <= 1195) {\r\n                $(\"#nav-right #cart-description\").text(\"\");\r\n                $(\"#nav-right\").css(\"padding-bottom\", \"18px\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Tablet size\r\n     *\r\n     */\r\n    sm : {\r\n        btnTransform_sm : function() {\r\n            if ($(window).width() <= 934 && ($(window).width() >= 769)) {\r\n                $(\".row:first .btn\").addClass(\"btn-sm\");\r\n                $(\"#searchBar\").addClass(\"input-sm\");\r\n                $(\"#view-cart-wrapper\").addClass(\"btn-xs btn-xs-btn-sm-height\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Changes text from dropdown button within the parent node passed in the argument\r\n     *\r\n     * @param $elem\r\n     */\r\n    changeTextFromDropdown : function($elem) {\r\n        $($elem + \" .dropdown-menu li a\").click(function(){\r\n\r\n            $($elem + \" .btn:first-child\").html($(this).text() + '<span class=\\\"caret\\\"></span>');\r\n            $($elem + \" .btn:first-child\").val($(this).text());\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Object responsible for handling all semantic ui modules (to be refactored eventually into its own object).\r\n     *\r\n     */\r\n    semanticUI: {\r\n\r\n        /**\r\n         * Initialize dropdown module.\r\n         *\r\n         */\r\n        initDropdownModule : function() {\r\n            //Enable selection on clicked items\r\n            $(\".ui.dropdown-select\").dropdown();\r\n\r\n            //Prevent selection on clicked items\r\n            $(\".ui.dropdown-no-select\").dropdown({\r\n                    action: \"select\"\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Register functions in event handler (onload, onresize) to be called outside of this object.\r\n     *\r\n     */\r\n    init: function () {\r\n        var self = headerContainer;\r\n\r\n        $(window).on(\"load resize\", function() {\r\n            self.md.removeCartDescription();\r\n            self.sm.btnTransform_sm();\r\n        });\r\n\r\n        self.changeTextFromDropdown(\".search-filter\");\r\n\r\n        //Initialize Semantic UI component\r\n        self.semanticUI.initDropdownModule();\r\n    }\r\n}\r\n","/**\r\n * Object responsible for handling the payment overlay behaviour.\r\n *\r\n * @type {{cancelOrder: Function, init: Function}}\r\n */\r\nvar paymentOverlayContainer = {\r\n\r\n    /**\r\n     * Cancels an order.\r\n     * If the user clicks the cancel button, remove the cookie, flush the card, fadeOut the jumbotron then redirect to homepage.\r\n     *\r\n     */\r\n    cancelOrder : function() {\r\n        $(\"body\").on(\"click\", \"#cancelOrder\", function() {\r\n            Cookies.remove(\"_unpaid_orders\");\r\n\r\n            $(\"#cancelledOrder .jumbotron\").fadeOut();\r\n\r\n            window.location.replace(\"/\");\r\n\r\n            UtilityContainer.removeAllProductsFromLocalStorage();\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Checks whether the user has any unpaid orders, and displays a message if that's the case.\r\n     *\r\n     */\r\n    checkPendingOrders : function() {\r\n\r\n        if (Cookies.get('_unpaid_orders')) {\r\n\r\n            // Retrieve order details.\r\n            var order = JSON.parse(Cookies.get('_unpaid_orders'));\r\n\r\n            // Check whether current order has been paid.\r\n            $.ajax({\r\n                type: 'GET',\r\n                url: ApiEndpoints.orders.view.replace(':id', order.id).replace(':verification', order.verification),\r\n                success: function(data) {\r\n                    if (data.status == 'pending')\r\n                        paymentOverlayContainer.showPaymentNotice();\r\n                    else\r\n                        Cookies.remove('_unpaid_orders');\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Shows payment notice.\r\n     *\r\n     */\r\n    showPaymentNotice : function() {\r\n\r\n        // Retrieve order details.\r\n        var order = JSON.parse(Cookies.get('_unpaid_orders'));\r\n\r\n        // Display notice.\r\n        $('body').prepend(\r\n            '<div class=\"container overlay fullScreen\" id=\"cancelledOrder\">'+\r\n            '<div class=\"jumbotron vertical-align color-one\">'+\r\n            '<div class=\"text-center\">'+\r\n            '<h2>'+\r\n            Localization.pending_order.replace(':command', order.id) +\r\n            '</h2>'+\r\n            '<h4>'+ Localization.what_to_do +'</h4>'+\r\n            '<br />'+\r\n            '<ul class=\"list-inline\">' +\r\n            '<li>' +\r\n            '<a href=\"'+\r\n            ApiEndpoints.orders.pay.replace(':id', order.id)\r\n                .replace(':verification', order.verification) +'\">'+\r\n            '<button class=\"btn btn-success\" id=\"payOrder\">'+ Localization.pay_now +'</button>'+\r\n            '</a>'+\r\n            '</li>' +\r\n            '<li>' +\r\n            '<button class=\"btn btn-danger\" id=\"cancelOrder\">'+\r\n            Localization.cancel_order +\r\n            '</button>'+\r\n            '</li>'+\r\n            '</ul>'+\r\n            '</div>'+\r\n            '</div>'+\r\n            '</div>'\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Register functions to be called outside paymentOverlayContainer.\r\n     *\r\n     */\r\n    init : function() {\r\n        var self = paymentOverlayContainer;\r\n\r\n        self.cancelOrder();\r\n        self.checkPendingOrders();\r\n    }\r\n}\r\n","/**\r\n * Object responsible for adding products to a user's wishlist.\r\n *\r\n * @type {{fadeInFavoriteIcon: Function, setWishlistBadgeQuantity: Function, createWishlistElement: Function, renderWishlist: Function, localizeWishlistButton: Function, removeWishlistElement: Function, init: Function}}\r\n */\r\nvar productLayoutFavoriteContainer = {\r\n    /**\r\n     * Fade in the favorite icon (heart icon) when hovering on a product tile.\r\n     *\r\n     */\r\n    fadeInFavoriteIcon: function() {\r\n        $(\".dense_product\").hover(function() {\r\n            $(this).children(\".favorite-wrapper\").fadeIn();\r\n        }, function () {\r\n            $(this).children(\".favorite-wrapper\").hide();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Update the value of .wishlist_badge when adding or deleting elements.\r\n     *\r\n     */\r\n    setWishlistBadgeQuantity : function() {\r\n        var total = UtilityContainer.getNumberOfProductsInWishlist();\r\n\r\n        $(\".wishlist_badge\").text(total);\r\n    },\r\n\r\n    /**\r\n     * Add the clicked product to the wish list.\r\n     *\r\n     */\r\n    addToFavorite: function() {\r\n        var self = productLayoutFavoriteContainer,\r\n            item;\r\n\r\n        $(\".favorite-wrapper\").on(\"click\", function() {\r\n            //No favorited class.\r\n            if (!$(this).hasClass(\"favorited\")) {\r\n                item = UtilityContainer.buyButton_to_Json($(this).parent().find(\".buybutton\"));\r\n                localStorage.setItem(\"_wish_product \" + item.product, JSON.stringify(item));\r\n\r\n                $(this).addClass(\"favorited\");\r\n\r\n                self.setWishlistBadgeQuantity();\r\n            }\r\n            else\r\n            //Has a favorited class. We remove it, then delete the element from local Storage.\r\n            {\r\n                self.removeFromFavorite($(this), self);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Persist the heart icon next to products already marked as wished.\r\n     *\r\n     */\r\n    persistFavorite: function() {\r\n        for(var i = 0, length = localStorage.length; i<length; i++)\r\n        {\r\n            if (localStorage.key(i).lastIndexOf(\"_wish_product\", 0) === 0) {\r\n                for(var j = 0; j<$(\".favorite-wrapper\").length; j++)\r\n                {\r\n                    if(JSON.parse(localStorage.getItem(localStorage.key(i))).product === parseInt($(\".favorite-wrapper\")[j].dataset.product))\r\n                    {\r\n                        $(\".favorite-wrapper\")[j].className += \" favorited\";\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Delete the clicked element from the wish list.\r\n     *\r\n     * @param context\r\n     */\r\n    removeFromFavorite: function (element, context) {\r\n        element.removeClass(\"favorited\");\r\n        localStorage.removeItem(\"_wish_product \" + element.data(\"product\"));\r\n        context.setWishlistBadgeQuantity();\r\n    },\r\n\r\n    init: function () {\r\n        var self = productLayoutFavoriteContainer;\r\n\r\n\r\n        self.addToFavorite();\r\n        self.persistFavorite();\r\n        self.fadeInFavoriteIcon();\r\n        self.setWishlistBadgeQuantity();\r\n    }\r\n}","/**\r\n * Object responsible for the view component of each category page.\r\n *\r\n * @type {{blurBackground: Function, init: Function}}\r\n */\r\nvar categoryContainer = {\r\n\r\n    /**\r\n     * Contains the updated URL parameters,\r\n     *\r\n     */\r\n    searchParameters: {\r\n        page: 1,\r\n        per_page: 8,\r\n        order: 'relevance',\r\n        min_price: null,\r\n        max_price: null,\r\n        brands: '',\r\n        categories: ''\r\n    },\r\n\r\n    /**\r\n     * Blurs the background of each category's page header.\r\n     *\r\n     */\r\n    blurBackground: function () {\r\n        $(\".category-header\").blurjs({\r\n            source: \".category-header\"\r\n        });\r\n    },\r\n\r\n\r\n    // SORTING FEATURE\r\n    /**\r\n     * TODO: REFACTOR ALL LOGIC INTO ITS OWN CONTAINER\r\n     *\r\n     */\r\n    itemsPerPage: function () {\r\n        $(\".items-per-page .item\").on(\"click\", function() {\r\n            categoryContainer.URL_add_parameter(\"per_page\", $(this).data(\"sort\"));\r\n        });\r\n\r\n        // Set the selected option.\r\n        $('#items-per-page-box').dropdown('set selected', this.searchParameters.per_page);\r\n    },\r\n\r\n    sortBy: function () {\r\n        $(\".sort-by .item\").on(\"click\", function() {\r\n            categoryContainer.URL_add_parameter(\"order\", $(this).data(\"sort\"));\r\n        });\r\n\r\n        // Set the selected option.\r\n        $('#sort-by-box').dropdown('set selected', this.searchParameters.order);\r\n    },\r\n\r\n\r\n    // FILTERING FEATURE.\r\n    priceUpdate: function() {\r\n        $(\"#price-update\").on(\"click\", function() {\r\n            categoryContainer.URL_add_parameter(\"min_price\", $(\"#min-price\").val());\r\n            categoryContainer.URL_add_parameter(\"max_price\", $(\"#max-price\").val());\r\n        });\r\n\r\n        // Set the specified price range.\r\n        if (this.searchParameters.min_price) {\r\n            $('#min-price').val(this.searchParameters.min_price);\r\n        }\r\n        if (this.searchParameters.max_price) {\r\n            $('#max-price').val(this.searchParameters.max_price);\r\n        }\r\n    },\r\n\r\n    categoriesUpdate: function() {\r\n\r\n    },\r\n\r\n    brandsUpdate: function() {\r\n\r\n    },\r\n\r\n    toggleLayout: function () {\r\n        var $container = $(\".layout-toggle-container\"),\r\n            $product = $(\".dense_product\"),\r\n            $product_img = $(\".product-image\"),\r\n            $product_buybutton = $(\".dense_product .buybutton\");\r\n\r\n        $(\"#list-layout, #grid-layout\").on(\"click\", function () {\r\n\r\n            if($container.hasClass(\"grid-layout\"))\r\n            {\r\n                // List layout\r\n                $container.removeClass(\"grid-layout\").addClass(\"list-layout\");\r\n\r\n                $product.removeClass(\"col-xs-6 col-sm-4 col-md-3 text-center no-border\")\r\n                    .addClass(\"col-xs-12 col-sm-12 col-md-12 border-bottom padding-1\");\r\n\r\n                $product_img.removeClass(\"img-responsive center-block\").addClass(\"pull-left\").css(\"margin-right\", \"5%\");\r\n\r\n                $product_buybutton.css(\"margin-top\", \"3%\");\r\n\r\n\r\n                $(this).toggleClass(\"active\");\r\n            }\r\n            else if ($container.hasClass(\"list-layout\"))\r\n            {\r\n                // Grid layout\r\n                $container.removeClass(\"list-layout\").addClass(\"grid-layout\");\r\n\r\n                $product.removeClass(\"col-xs-12 col-sm-12 col-md-12 border-bottom padding-1\").\r\n                    addClass(\"col-xs-6 col-sm-4 col-md-3 text-center no-border\");\r\n\r\n                $product_img.addClass(\"img-responsive center-block\").removeClass(\"pull-left\").css(\"margin-right\", \"0\");\r\n\r\n                $product_buybutton.css(\"margin-top\", \"0\");\r\n\r\n                $(this).toggleClass(\"active\");\r\n            }\r\n        })\r\n    },\r\n\r\n    // HELPER FUNCTION : TO BE MOVED IN UTILITYCONTAINER\r\n    // Courtesy of http://stackoverflow.com/a/1917916\r\n    URL_add_parameter: function(key, value){\r\n        key = escape(key); value = escape(value);\r\n\r\n        var kvp = document.location.search.substr(1).split('&');\r\n        if (kvp == '') {\r\n            document.location.search = '?' + key + '=' + value;\r\n        }\r\n        else {\r\n\r\n            var i = kvp.length; var x; while (i--) {\r\n                x = kvp[i].split('=');\r\n\r\n                if (x[0] == key) {\r\n                    x[1] = value;\r\n                    kvp[i] = x.join('=');\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (i < 0) { kvp[kvp.length] = [key, value].join('='); }\r\n\r\n            //this will reload the page, it's likely better to store this until finished\r\n            document.location.search = kvp.join('&');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the query parameters from the URL and stores them locally.\r\n     * Inspired by http://stackoverflow.com/a/1917916\r\n     *\r\n     */\r\n    retrieveSearchParameters: function() {\r\n\r\n        // Performance check.\r\n        var query = document.location.search.substr(1);\r\n        if (query.length < 1) {\r\n            return;\r\n        }\r\n\r\n        // Loop through query elements.\r\n        var kvp = query.split('&'), index, pair, key, value;\r\n        for (index in kvp)\r\n        {\r\n            // Skip parameters without any values.\r\n            if (kvp[index].indexOf('=') < 1) {\r\n                continue;\r\n            }\r\n\r\n            pair = kvp[index].split('=');\r\n            key = pair[0];\r\n            value = pair[1];\r\n\r\n            // Save the search parameter if it's valid.\r\n            if (typeof this.searchParameters[key] != 'undefined') {\r\n                this.searchParameters[key] = value;\r\n                //this.searchParameters[key] = ['brands', 'categories'].includes(key) ?\r\n                //    value.split(';') :\r\n                //    value;\r\n            }\r\n        }\r\n    },\r\n\r\n    init: function () {\r\n        var self = categoryContainer;\r\n\r\n        self.retrieveSearchParameters();\r\n        self.blurBackground();\r\n        self.itemsPerPage();\r\n        self.sortBy();\r\n        self.priceUpdate();\r\n        self.categoriesUpdate();\r\n        self.brandsUpdate();\r\n        self.toggleLayout();\r\n    }\r\n\r\n};\r\n","/**\r\n * Object responsible for the view component of the wish list page.\r\n * Logic handled in dev/actions/site/wishlist-logic.js\r\n *\r\n * @type {{setNumberOfProductsInHeader: Function, init: Function}}\r\n */\r\nvar wishlistContainer = {\r\n\r\n    /**\r\n     * Sets the number of products in the header (singular / plural).\r\n     *\r\n     */\r\n    setNumberOfProductsInHeader: function() {\r\n        var quantity = \"\";\r\n        UtilityContainer.getNumberOfProductsInWishlist() == 0 || UtilityContainer.getNumberOfProductsInWishlist() == 1 ? quantity+= (UtilityContainer.getNumberOfProductsInWishlist() + \"  item \") : quantity += (UtilityContainer.getNumberOfProductsInWishlist() + \"  items \");\r\n        $(\"#quantity-wishlist\").text(quantity);\r\n    },\r\n\r\n\r\n    init: function() {\r\n        var self = wishlistContainer;\r\n\r\n        self.setNumberOfProductsInHeader();\r\n    }\r\n}","/**\r\n * Utility object containing various utility functions...\r\n * Self Explanatory duh.\r\n *\r\n * @type {{getProductsFromLocalStorage: Function, getNumberOfProductsInWishlist: Function, getNumberOfProducts: Function, getProductsPriceFromLocalStorage: Function, removeAllProductsFromLocalStorage: Function, getShippingFromForm: Function, buyButton_to_Json: Function, populateCountry: Function, validateEmptyFields: Function, validateEmail: Function, validatePostCode: Function, validateEmptyCart: Function, addErrorClassToFields: Function, addErrorClassToFieldsWithRules: Function, addFadeOutUpClass: Function, removeErrorClassFromFields: Function, getCheapestShippingMethod: Function, getTaxes: Function, getShipmentTaxes: Function, getCartTaxes: Function, getCartTotal: Function}}\r\n */\r\nvar UtilityContainer = {\r\n    /**\r\n     * Utility function for getting all the products in localStorage.\r\n     * Returns an array containing their id, their quantity and their price.\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    getProductsFromLocalStorage : function() {\r\n        var res = [];\r\n\r\n        for(var i = 0, length = localStorage.length; i<length; i++)\r\n        {\r\n            if (localStorage.key(i).lastIndexOf(\"_product\", 0) === 0)\r\n            {\r\n                var product = JSON.parse(localStorage.getItem(localStorage.key(i))),\r\n                    productId = product.product,\r\n                    productQuantity = product.quantity,\r\n                    productPrice = product.price;\r\n\r\n                res.push({\r\n                    id: productId,\r\n                    quantity: productQuantity,\r\n                    price : productPrice\r\n                });\r\n            }\r\n        }\r\n\r\n        return res;\r\n    },\r\n\r\n    /**\r\n     * Utility function returning the number of products present in the wish list.\r\n     *\r\n     * @returns {number}\r\n     */\r\n    getNumberOfProductsInWishlist : function() {\r\n        var total = 0;\r\n\r\n        for(var i = 0, length = localStorage.length; i<length; i++)\r\n        {\r\n            if (localStorage.key(i).lastIndexOf(\"_wish_product\", 0) === 0)\r\n            {\r\n                total += JSON.parse(localStorage.getItem(localStorage.key(i))).quantity;\r\n            }\r\n        }\r\n\r\n        return total;\r\n    },\r\n\r\n    /**\r\n     * Utility function returning the number of products present in the cart.\r\n     *\r\n     * @returns {number}\r\n     */\r\n    getNumberOfProducts : function() {\r\n        var total = 0;\r\n\r\n        for(var i = 0, length = localStorage.length; i<length; i++)\r\n        {\r\n            if (localStorage.key(i).lastIndexOf(\"_product\", 0) === 0)\r\n            {\r\n                total += JSON.parse(localStorage.getItem(localStorage.key(i))).quantity;\r\n            }\r\n        }\r\n\r\n        return total;\r\n    },\r\n\r\n    /**\r\n     * Utility function to get the total price from all products present in localStorage.\r\n     *\r\n     * @returns {number}\r\n     */\r\n    getProductsPriceFromLocalStorage : function() {\r\n        var total = 0,\r\n            products = UtilityContainer.getProductsFromLocalStorage();\r\n\r\n        for(var i= 0, length = products.length; i<length; i++)\r\n        {\r\n            total += (products[i].price * products[i].quantity);\r\n        }\r\n\r\n        return total;\r\n    },\r\n\r\n    /**\r\n     * Utility function to delete all products from localStorage.\r\n     *\r\n     */\r\n    removeAllProductsFromLocalStorage : function() {\r\n        for(var i= 0, length = localStorage.length; i<length; i++) {\r\n            if (localStorage.key(i).lastIndexOf(\"_product\", 0) === 0)\r\n            {\r\n                localStorage.removeItem(localStorage.key(i));\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Utility function fo getting the country, the postal code and the province (if any) of the user.\r\n     *\r\n     * @returns {{country: (*|jQuery), postcode: (*|jQuery), province: (*|jQuery)}}\r\n     */\r\n    getShippingFromForm : function() {\r\n        return res = {\r\n            \"country\" : $(\"#shippingCountry\").val(),\r\n            \"postcode\" : $(\"#shippingPostcode\").val(),\r\n            \"province\" : $(\"#shippingProvince\").val(),\r\n            \"line1\" : $(\"#shippingAddress1\").val(),\r\n            \"line2\" : $(\"#shippingAddress2\").val(),\r\n            \"name\" : $(\"#shippingFirstname\").val() + \" \" + $(\"#shippingLastname\").val(),\r\n            \"city\" : $(\"#shippingCity\").val(),\r\n            \"phone\" : $(\"#shippingTel\").val()\r\n        };\r\n    },\r\n\r\n    /**\r\n     * parse the information from a buy button into a readable json format\r\n     *\r\n     * @param item\r\n     * @returns {{product: *, name: *, price: *, thumbnail: *, thumbnail_lg: *, quantity: number}}\r\n     */\r\n    buyButton_to_Json : function(item) {\r\n        return {\r\n            \"product\" : item.data(\"product\"),\r\n            \"name\" : item.data(\"name\"),\r\n            \"price\" : item.data(\"price\"),\r\n            \"thumbnail\" : item.data(\"thumbnail\"),\r\n            \"thumbnail_lg\" : item.data(\"thumbnail_lg\"),\r\n            \"quantity\" : parseInt(item.data(\"quantity\")),\r\n            \"link\" : item.data(\"link\")\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Utility object used to populate a select list (#country) with a list of country (json formatted) in the appropriate language.\r\n     *\r\n     */\r\n    populateCountry : function (lang) {\r\n        var file = \"/js/data/country-list.\" + lang + \".json\",\r\n            listItems = '',\r\n            $country = $(\"#country\");\r\n\r\n        $.getJSON(file, function(data) {\r\n            $.each(data, function(key, val) {\r\n                if (key == \"CA\") {\r\n                    listItems += \"<option value='\" + key + \"' selected>\" + val + \"</option>\";\r\n                }\r\n                else {\r\n                    listItems += \"<option value='\" + key + \"'>\" + val + \"</option>\";\r\n                }\r\n            });\r\n            $country.append(listItems);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Check if the fields passed in the argument are empty or not.\r\n     *\r\n     * @param emptyFields\r\n     * @returns {boolean}\r\n     */\r\n    validateEmptyFields: function(emptyFields) {\r\n        var passed = true;\r\n        for(var i= 0, length = emptyFields.length; i<length; i++) {\r\n            if (emptyFields[i].val() == \"\")\r\n            {\r\n                passed = false;\r\n                break;\r\n            }\r\n        }\r\n        return passed;\r\n    },\r\n\r\n    /**\r\n     * Validate the email address passed as the argument.\r\n     *\r\n     * @param email\r\n     * @returns {boolean}\r\n     */\r\n    validateEmail: function(email) {\r\n        var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n        return re.test(email);\r\n    },\r\n\r\n    /**\r\n     * Validate a CA or US postal code.\r\n     *\r\n     * @param postcode\r\n     * @param country\r\n     * @returns {boolean}\r\n     */\r\n    validatePostCode: function(postcode, country) {\r\n        if (country == \"CA\")\r\n            return postcode.match(/^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} ?\\d{1}[A-Z]{1}\\d{1}$/i) ? true : false;\r\n        else if (country == \"US\")\r\n            return postcode.match(/^\\d{5}(?:[-\\s]\\d{4})?$/) ? true : false;\r\n        else\r\n            return true;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the cart is empty, false otherwise.\r\n     *\r\n     * @returns {*}\r\n     */\r\n    validateEmptyCart : function () {\r\n        var empty;\r\n        UtilityContainer.getProductsPriceFromLocalStorage() === 0 ?  empty = true : empty = false;\r\n\r\n        return empty;\r\n    },\r\n\r\n    /**\r\n     * Add .has-error to parent class + animate the relevant fields.\r\n     *\r\n     * @param fields\r\n     */\r\n    addErrorClassToFields: function(fields) {\r\n        for(var i= 0, length = fields.length; i<length; i++)\r\n        {\r\n            if (fields[i].val() == \"\")\r\n            {\r\n                fields[i].parent().addClass(\"has-error\");\r\n                fields[i].addClass('animated shake').bind('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){\r\n                    $(this).removeClass(\"animated\");\r\n                    $(this).removeClass(\"shake\");\r\n                    $(this).unbind();\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Same as addErrorClassToFields but accept a single input (ie. specific rules have to be applied: email / postal code / ...\r\n     *\r\n     * @param input\r\n     */\r\n    addErrorClassToFieldsWithRules: function(input) {\r\n        input.parent().addClass(\"has-error\");\r\n        input.addClass('animated shake').bind('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){\r\n            $(this).removeClass(\"animated\");\r\n            $(this).removeClass(\"shake\");\r\n            $(this).unbind();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Adds a fadeOutUp class then hide the element passed as an argument.\r\n     *\r\n     * @param $element\r\n     */\r\n    addFadeOutUpClass: function ($element) {\r\n        $element.addClass(\"animated fadeOutUp\").delay(1000).queue(function() {\r\n            $(this).addClass(\"hidden\").clearQueue();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Remove .has-error from fields\r\n     *\r\n     * @param fields\r\n     */\r\n    removeErrorClassFromFields: function(fields) {\r\n        for(var i= 0, length = fields.length; i<length; i++)\r\n        {\r\n            if (fields[i].val() != \"\" && fields[i].parent().hasClass(\"has-error\"))\r\n            {\r\n                fields[i].parent().removeClass(\"has-error\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns the method and the price of the cheapest shipping services.\r\n     *\r\n     * @param data\r\n     * @returns {{fare: *, method: (*|string)}}\r\n     */\r\n    getCheapestShippingMethod : function(data) {\r\n        var availableShipment = data.shipping.services,\r\n            sortedShipmentByPrice = [];\r\n\r\n        for(var i= 0, length = availableShipment.length; i<length; i++)\r\n        {\r\n            sortedShipmentByPrice.push(availableShipment[i]);\r\n        }\r\n\r\n        sortedShipmentByPrice.sort(function(a,b) {\r\n            return a.price - b.price\r\n        });\r\n\r\n        return {\r\n            fare: sortedShipmentByPrice[0].price,\r\n            method: sortedShipmentByPrice[0].method\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get the total taxes (TPS/TVQ or TVH or TPS or null) + shipping method taxes.\r\n     *\r\n     * @param data\r\n     * @returns {number}\r\n     */\r\n    getTaxes : function(data) {\r\n        var taxes = 0,\r\n            dataTaxesLength = data.taxes.length;\r\n\r\n        if (dataTaxesLength != 0)\r\n        {\r\n            for(var i=0; i<dataTaxesLength; i++)\r\n            {\r\n                taxes += data.taxes[i].amount;\r\n            }\r\n        }\r\n\r\n        return taxes.toFixed(2);\r\n    },\r\n\r\n    /**\r\n     * Get the relevant taxes according to the chosen shipping method.\r\n     *\r\n     * @param serviceCode\r\n     * @param data\r\n     * @returns {string}\r\n     */\r\n    getShipmentTaxes : function(serviceCode, data) {\r\n        var taxes = 0;\r\n        console.log(data);\r\n\r\n        for(var i=0; i<data.shipping.services.length; i++)\r\n        {\r\n            if(data.shipping.services[i].method == serviceCode)\r\n            {\r\n                if (data.shipping.services[i].taxes.length != 0)\r\n                {\r\n                    for(var j=0; j<data.shipping.services[i].taxes.length; j++)\r\n                    {\r\n                        taxes += data.shipping.services[i].taxes[j].amount;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return taxes.toFixed(2);\r\n    },\r\n\r\n    /**\r\n     * Returns appropriate taxes according to the shipping method.\r\n     *\r\n     * @param serviceCode\r\n     * @param data\r\n     * @returns {number}\r\n     */\r\n    getCartTaxes : function(serviceCode, data) {\r\n        var taxes = parseFloat(UtilityContainer.getTaxes(data)),\r\n            shippingTaxes = parseFloat(UtilityContainer.getShipmentTaxes(serviceCode, data)),\r\n            totalTaxes = taxes + shippingTaxes;\r\n\r\n        return totalTaxes;\r\n    },\r\n\r\n    /**\r\n     * Returns total price (subtotal + taxes + shipping taxes)\r\n     * Saves total in sessionStorage (for live update)\r\n     *\r\n     * @param data\r\n     * @returns {string}\r\n     */\r\n    getCartTotal : function(serviceCode, data) {\r\n        var taxes = parseFloat(UtilityContainer.getCartTaxes(serviceCode.method, data)),\r\n            shipping = parseFloat(UtilityContainer.getCheapestShippingMethod(data).fare),\r\n            subtotal = parseFloat(UtilityContainer.getProductsPriceFromLocalStorage()),\r\n            total = (taxes + shipping + subtotal).toFixed(2);\r\n\r\n        return total;\r\n    }\r\n}\r\n\r\n","/**\r\n * Container responsible for initializing the checkout page.\r\n * Overall logic is handled in js/dev/actions/checkout/*.js\r\n * View component is handled in js/dev/components/checkout/*.js\r\n *\r\n * @type {{estimateButtonClick: Function, init: Function}}\r\n */\r\nvar checkoutInitContainer = {\r\n\r\n    /**\r\n     * Event triggered when the \"Continue\" button is hit.\r\n     * If the input fields entered are appropriate, make the ajax call to \"/api/estimate\".\r\n     * If they are not, display the relevant error message(s)\r\n     *\r\n     */\r\n    estimateButtonClick : function() {\r\n        $(\"#estimateButton\").on(\"click\", function(e) {\r\n            var email = $(\"#customer_email\"),\r\n                phone = $(\"#customer_phone\"),\r\n                shippingFirstName = $(\"#shippingFirstname\"),\r\n                shippingLastName = $(\"#shippingLastname\"),\r\n                shippingAddress1 = $(\"#shippingAddress1\"),\r\n                shippingCity = $(\"#shippingCity\"),\r\n                shippingCountry = $(\"#shippingCountry\").val(),\r\n                shippingPostcode = $(\"#shippingPostcode\"),\r\n                billingFirstName = $(\"#billingFirstname\"),\r\n                billingLastName = $(\"#billingLastname\"),\r\n                billingAddress1 = $(\"#billingAddress1\"),\r\n                billingCity = $(\"#billingCity\"),\r\n                billingCountry = $(\"#billingCountry\").val(),\r\n                billingPostcode = (\"#billingPostcode\"),\r\n                shippingInformation = {\r\n                    \"country\" : shippingCountry,\r\n                    \"postcode\" : $(\"#shippingPostcode\").val(),\r\n                    \"postcodeInput\" : $(\"#shippingPostcode\")\r\n                },\r\n                fields = [\r\n                    shippingFirstName,\r\n                    shippingLastName,\r\n                    shippingAddress1,\r\n                    shippingCity,\r\n                    billingFirstName,\r\n                    billingLastName,\r\n                    billingAddress1,\r\n                    billingCity,\r\n                    email,\r\n                    phone\r\n                ];\r\n\r\n            e.preventDefault();\r\n\r\n            //Auto fill billing address if checkbox is checked.\r\n            billingContainer.autoFillBillingAddress(fields, shippingInformation.postcodeInput);\r\n\r\n            //Build the billing information object (from auto fill or entered by hand)\r\n            var billingInformation = {\r\n                \"country\" : billingCountry,\r\n                \"postcode\" : $(\"#billingPostcode\").val(),\r\n                \"postcodeInput\" : $(\"#billingPostcode\")\r\n            };\r\n\r\n            //Validate all fields and make the ajax call!\r\n            checkoutValidationContainer.init(fields, email, shippingInformation, billingInformation);\r\n        });\r\n    },\r\n\r\n    init: function () {\r\n        /**\r\n         * Populate select lists and set up billing address container behaviour.\r\n         * Set the form focus on first name field\r\n         *\r\n         */\r\n        locationContainer.init();\r\n        billingContainer.init();\r\n        $(\"#shippingFirstname\").focus();\r\n\r\n        var self = checkoutInitContainer;\r\n        self.estimateButtonClick();\r\n    }\r\n}","/**\r\n * Object responsible for handling the overall logic of the checkout process.\r\n * After clicking on \"Proceed to checkout\", create a cookie and make an ajax call to get all the data before redirecting the user to the payment page.\r\n *\r\n * When a user changes the quantity or deletes an item, fadeOut the shipping estimate and payment panel. Replace the Continue button with \"Update\".\r\n *\r\n * @type {{createOrdersCookie: Function, placeOrderAjaxCall: Function, init: Function}}\r\n */\r\nvar checkoutLogicContainer = {\r\n\r\n    /**\r\n     * Create a localStorage object containing the id and the verification code.\r\n     *\r\n     * @param data\r\n     */\r\n    createOrdersCookie: function(data) {\r\n        var paymentId = data.id,\r\n            paymentVerification = data.verification;\r\n\r\n        Cookies.set(\"_unpaid_orders\", JSON.stringify( {\r\n            id : paymentId,\r\n            verification : paymentVerification\r\n        }));\r\n    },\r\n\r\n    /**\r\n     * Makes an ajax call to api/orders with the values from the form\r\n     *\r\n     * @param self\r\n     */\r\n    placeOrderAjaxCall: function(self) {\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: ApiEndpoints.placeOrder,\r\n            data: $(\"#cart_form\").serialize(),\r\n            cache: false,\r\n            success: function(data) {\r\n                console.log(data);\r\n\r\n                self.createOrdersCookie(data);\r\n\r\n                //redirect the user to the checkout page if he backs from the payment page\r\n                history.pushState({data: data}, \"Checkout \",\"/dev/cart\");\r\n\r\n                //Redirect to success url\r\n                window.location.replace(data.payment_details.payment_url);\r\n            },\r\n            error: function(xhr, e) {\r\n                console.log(xhr);\r\n                console.log(e);\r\n            }\r\n        })\r\n\r\n    },\r\n\r\n    /**\r\n     * Hide the panels by fading them up then adding a hidden class.\r\n     *\r\n     * @param self\r\n     */\r\n    hidePanels: function (self) {\r\n        $(\".quantity, #shippingPostcode, #shippingCity\").on(\"change\", function () {\r\n            UtilityContainer.addFadeOutUpClass($(\"#estimate\"));\r\n            UtilityContainer.addFadeOutUpClass($(\"#payment\"));\r\n\r\n            self.updateEstimateButtonValue();\r\n        });\r\n\r\n        $(\".close-button\").on(\"click\", function() {\r\n            UtilityContainer.addFadeOutUpClass($(\"#estimate\"));\r\n            UtilityContainer.addFadeOutUpClass($(\"#payment\"));\r\n\r\n            self.updateEstimateButtonValue();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Updates the estimate button with \"Update\" while making it bouncy ;)\r\n     *\r\n     */\r\n    updateEstimateButtonValue: function() {\r\n        $(\"#estimateButton\")\r\n            .removeClass(\"btn-one animated rubberBand\")\r\n            .addClass(\"animated rubberBand btn-three\")\r\n            .text(Localization.update);\r\n    },\r\n\r\n    /**\r\n     * Register methods for outside calling.\r\n     *\r\n     */\r\n    init: function() {\r\n        var self = checkoutLogicContainer;\r\n\r\n        $(\"#checkoutButton\").on(\"click\", function (e) {\r\n            e.preventDefault();\r\n\r\n            $('#checkoutButton').html('<i class=\"fa fa-spinner fa-spin\"></i>');\r\n\r\n            self.placeOrderAjaxCall(self);\r\n\r\n        });\r\n\r\n        self.hidePanels(self);\r\n    }\r\n}","/**\r\n * Object responsible for validating all the information entered by the user.\r\n * Will trigger the ajax call only when all the inputs entered match their validation rules.\r\n *\r\n * @type {{removeErrorClassFromEmail: Function, removeErrorClassFromPostcode: Function, init: Function}}\r\n */\r\nvar checkoutValidationContainer = {\r\n\r\n    removeErrorClassFromEmail: function(email) {\r\n        if (UtilityContainer.validateEmail(email.val()) && email.parent().hasClass(\"has-error\"))\r\n            email.parent().removeClass(\"has-error\");\r\n    },\r\n\r\n    removeErrorClassFromPostcode: function(postcode, country) {\r\n        if (UtilityContainer.validatePostCode(postcode.val(), country) && postcode.parent().hasClass(\"has-error\"))\r\n            postcode.parent().removeClass(\"has-error\");\r\n    },\r\n\r\n    /**\r\n     * If all validation pass, spin the button, clean the shipment table and trigger the ajax call.\r\n     * If there are errors, warn the users about which inputs is faulty.\r\n     *\r\n     * @param fields\r\n     * @param email\r\n     * @param postcode\r\n     * @param country\r\n     */\r\n    init : function(fields, email, shippingInformation, billingInformation) {\r\n        var self = checkoutValidationContainer;\r\n\r\n        if (UtilityContainer.validateEmptyFields(fields)\r\n            && UtilityContainer.validateEmail(email.val())\r\n            && UtilityContainer.validatePostCode(shippingInformation.postcode, shippingInformation.country)\r\n            && UtilityContainer.validatePostCode(billingInformation.postcode, billingInformation.country))\r\n        {\r\n            $('#estimateButton').html('<i class=\"fa fa-spinner fa-spin\"></i>');\r\n\r\n            //delete previously uploaded shipping method (if any)\r\n            if($(\"#estimate .table-striped\").children().length > 0) {\r\n                $(\"#estimate .table-striped tbody\").empty();\r\n            }\r\n\r\n            estimateContainer.ajaxCall();\r\n        }\r\n        else\r\n        {\r\n            UtilityContainer.addErrorClassToFields(fields);\r\n\r\n            if(!UtilityContainer.validatePostCode(shippingInformation.postcode, shippingInformation.country))\r\n            {\r\n                UtilityContainer.addErrorClassToFieldsWithRules(shippingInformation.postcodeInput);\r\n            }\r\n\r\n            if(!UtilityContainer.validatePostCode(billingInformation.postcode, billingInformation.country))\r\n            {\r\n                UtilityContainer.addErrorClassToFieldsWithRules(billingInformation.postcodeInput);\r\n            }\r\n\r\n            if(!UtilityContainer.validateEmail(email.val()))\r\n            {\r\n                UtilityContainer.addErrorClassToFieldsWithRules(email);\r\n                $(\"#why_email\").removeClass(\"hidden\").addClass(\"animated bounceInRight\").tooltip();\r\n            }\r\n\r\n        }\r\n\r\n        UtilityContainer.removeErrorClassFromFields(fields);\r\n        self.removeErrorClassFromEmail(email);\r\n        self.removeErrorClassFromPostcode(shippingInformation.postcodeInput, shippingInformation.country);\r\n        self.removeErrorClassFromPostcode(billingInformation.postcodeInput, billingInformation.country);\r\n    }\r\n}\r\n","/**\r\n * Object responsible for the overall logic (CRUD) of the cart drawer.\r\n * Layout handled in dev/components/layout/cart-drawer.js\r\n *\r\n * @type {{$el: {$list: (*|jQuery|HTMLElement)}, addItem: Function, storeItem: Function, loadItem: Function, deleteItem: Function, modifyQuantity: Function, modifyQuantityBeforeBuying: Function, setBadgeQuantity: Function, setQuantityCookie: Function, setCartSubtotal: Function, setCartShipping: Function, setCartTaxes: Function, setCartTotal: Function, ajaxCall: Function, updateAjaxCall: Function, init: Function}}\r\n */\r\nvar cartLogicContainer = {\r\n    /**\r\n     * Cache a set of elements commonly used (to be updated)\r\n     */\r\n    $el : {\r\n        $list : $(\".cart-items-list\")\r\n    },\r\n\r\n    /**\r\n     * Add an item in the list.\r\n     *\r\n     * @param item JSON format converted from attributes on the .buybutton\r\n     */\r\n    addItem : function(item) {\r\n        var price = (parseInt(item.quantity) * parseFloat(item.price)).toFixed(2);\r\n\r\n        var sidebarElement = '<li class=\"w-box animated bounceInDown\" data-product=\"' + item.product + '\" data-quantity=1>' +\r\n            '<div class=\"col-xs-3 text-center\"><img src=' + item.thumbnail_lg + ' class=\"img-responsive\"></div>' +\r\n            '<div class=\"col-xs-9 no-padding-left\">' +\r\n            '<div class=\"row\"><div class=\"col-xs-10\"><h3 class=\"product-name\">' + item.name + '</h3></div><div class=\"col-xs-2\"><h4 class=\"text-right\"><i class=\"fa fa-trash fa-1 close-button\"><span class=\"sr-only\">Remove Item</span></i></h4></div></div>' +\r\n            '<div class=\"row\"><div class=\"col-xs-8\">' +\r\n            '<div class=\"input-group\"><label for=\"products[' + item.product + '][quantity]\" class=\"sr-only\">'+ item.name + \":\" + item.price +'</label>' +\r\n            '<input type=\"number\" class=\"quantity form-control input-sm\" min=\"1\" step=\"1\" value=\"' + item.quantity + '\" name=\"products[' + item.product + '][quantity]\">' +\r\n            '<span class=\"input-group-addon update_quantity_indicator\"><i class=\"fa\" hidden><span class=\"sr-only\">' + \"Update quantity\" + '</span></i></span></div></div>' +\r\n            '<div class=\"col-xs-4 product-price text-right\" data-price=\"' + item.price + '\">$' + price  + '<span class=\"sr-only\">' + $ + item.price + '</span></div></div>' +\r\n            '<input type=\"hidden\" name=\"products[' + item.product + '][id]\" value=\"' + item.product + '\"/> ' +\r\n            '</div>' +\r\n            '</li>';\r\n\r\n        if (!$(\".cart-items-list [data-product='\" + item.product + \"']\").length){\r\n            cartLogicContainer.$el.$list.append(sidebarElement);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Store a product in localStorage\r\n     * Update badge quantity\r\n     * Create/update a quantity cookie\r\n     *\r\n     * @param item JSON format converted from attributes on the .buybutton\r\n     */\r\n    storeItem : function(item) {\r\n        localStorage.setItem(\"_product \" + item.product, JSON.stringify(item));\r\n        cartLogicContainer.setBadgeQuantity();\r\n        cartLogicContainer.setQuantityCookie();\r\n        cartLogicContainer.setCartSubtotal();\r\n        cartLogicContainer.setCartTotal();\r\n        cartLogicContainer.updateAjaxCall();\r\n    },\r\n\r\n    /**\r\n     * Load a list of items previously bought into the cart.\r\n     * If there is no item in localStorage starting with the key \"_product\", then nothing is loaded.\r\n     */\r\n    loadItem : function() {\r\n        for(var i = 0, length = localStorage.length; i<length; i++)\r\n        {\r\n            if (localStorage.key(i).lastIndexOf(\"_product\", 0) === 0)\r\n            {\r\n                cartLogicContainer.addItem(JSON.parse(localStorage.getItem(localStorage.key(i))));\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Delete an item from the cart drawer list.\r\n     * Remove it from the DOM.\r\n     * Delete the object on localStorage.\r\n     * Set Badge quantity accordingly.\r\n     * Update Cookie quantity accordingly.\r\n     */\r\n    deleteItem: function() {\r\n        $(document).on('click', \".close-button\", function() {\r\n            $parent = $(this).closest(\".animated\").addClass(\"animated bounceOutLeft\");\r\n            $parent.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){\r\n                $(this).remove();\r\n            });\r\n\r\n            localStorage.removeItem(\"_product \" + $(this).closest(\".animated\").data(\"product\"));\r\n\r\n            cartLogicContainer.setBadgeQuantity();\r\n            cartLogicContainer.setQuantityCookie();\r\n            cartLogicContainer.setCartSubtotal();\r\n            cartLogicContainer.setCartTotal();\r\n            cartLogicContainer.updateAjaxCall();\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Modify the quantity of a product in the cart\r\n     * Update its price label accordingly\r\n     * Update the localStorage\r\n     * Set badge quantity\r\n     * Update Cookie quantity\r\n     */\r\n    modifyQuantity : function() {\r\n        $(\"#cart-items\").on(\"change\", \".quantity\", function() {\r\n            $container = $(this).closest(\"li\");\r\n            $product_price = $container.find(\".product-price\");\r\n\r\n            //update the total value\r\n            $product_price.text(\"$\" + ($product_price.data(\"price\") * $(this).val()).toFixed(2));\r\n\r\n            //retrieve old data from old object then update the quantity and finally update the object\r\n            var oldData = JSON.parse(localStorage.getItem(\"_product \" + $container.data(\"product\")));\r\n            oldData.quantity = parseInt($(this).val());\r\n            localStorage.setItem(\"_product \" + $container.data(\"product\"), JSON.stringify(oldData));\r\n\r\n            cartLogicContainer.setBadgeQuantity();\r\n            cartLogicContainer.setQuantityCookie();\r\n            cartLogicContainer.setCartSubtotal();\r\n            cartLogicContainer.setCartTotal();\r\n            cartLogicContainer.updateAjaxCall();\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Modify the quantity in a product page before buying\r\n     * Only used in a product page.\r\n     * Assuming the DOM has (and will keep) this structure:\r\n     *      .form-group\r\n     *          #item-quantity\r\n     *      .buybutton\r\n     */\r\n    modifyQuantityBeforeBuying : function() {\r\n        $(\"#item_quantity\").on(\"change\", function() {\r\n            $(this).closest(\".form-group\").next().data(\"quantity\", parseInt($(this).val()));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Update the value of #cart_badge when adding or deleting elements\r\n     */\r\n    setBadgeQuantity : function() {\r\n        var total = UtilityContainer.getNumberOfProducts();\r\n\r\n        $(\".cart_badge\").text(total);\r\n    },\r\n\r\n    /**\r\n     * Create or Update a cookie with the quantity present in the cart.\r\n     * The value of the cookie is encoded in base64 (btoa)\r\n     */\r\n    setQuantityCookie : function () {\r\n        var number = UtilityContainer.getNumberOfProducts();\r\n\r\n        if (Cookies.get(\"quantityCart\") == undefined || number === 0)\r\n        {\r\n            Cookies.set(\"quantityCart\", btoa(\"0\"));\r\n        }\r\n        else {\r\n            Cookies.set(\"quantityCart\", btoa(number));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update subtotal when users put something in or out of their cart.\r\n     *\r\n     */\r\n    setCartSubtotal : function () {\r\n        $(\"dd#subtotal\").text(\"$\" + UtilityContainer.getProductsPriceFromLocalStorage().toFixed(2));\r\n    },\r\n\r\n    /**\r\n     * Set shipping field\r\n     *\r\n     * @param data\r\n     */\r\n    setCartShipping : function(data) {\r\n        $(\"dd#shipping\").text(\"$\" + (UtilityContainer.getCheapestShippingMethod(data).fare));\r\n    },\r\n\r\n\r\n    /**\r\n     * Set taxes field\r\n     *\r\n     * @param taxes\r\n     */\r\n    setCartTaxes : function(taxes) {\r\n        $(\"#taxes\").text(\"$\" + taxes.toFixed(2));\r\n    },\r\n\r\n    /**\r\n     * Set total field\r\n     *\r\n     * @param total\r\n     */\r\n    setCartTotal : function (total) {\r\n        $(\".cart-total dl\").show();\r\n        $(\".calculation.total dd\").text(\"$ \" + total);\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Ajax call to /api/estimate after all verifications have passed.\r\n     *\r\n     */\r\n    ajaxCall : function() {\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/api/estimate\",\r\n            data: {\r\n                products: UtilityContainer.getProductsFromLocalStorage(),\r\n                shipping_address: {\r\n                    \"postcode\": $(\"#postcode\").val(),\r\n                    \"country\": $(\".price-estimate #country\").val(),\r\n                    \"province\" : \"QC\"\r\n                }\r\n            },\r\n            success: function(data) {\r\n                cartLogicContainer.setCartShipping(data);\r\n                cartLogicContainer.setCartTaxes(UtilityContainer.getCartTaxes(UtilityContainer.getCheapestShippingMethod(data).method, data));\r\n                cartLogicContainer.setCartTotal(UtilityContainer.getCartTotal(UtilityContainer.getCheapestShippingMethod(data), data));\r\n            },\r\n            error: function(e) {\r\n                console.log(e);\r\n            },\r\n            complete : function() {\r\n                $(\".price-estimate\").fadeOut(300, function() {\r\n                    $(\".calculation.hidden\").fadeIn().removeClass(\"hidden\");\r\n                    $(\".cart-total.hidden\").fadeIn().removeClass(\"hidden\");\r\n                });\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Display an update panel when changes are made to the cart drawer.\r\n     *\r\n     */\r\n    updateAjaxCall : function() {\r\n        //If the total is displayed, it means that there's already been an ajax call: we have to display an update!\r\n        if(!$(\".total\").parent().hasClass(\"hidden\")) {\r\n            $(\".cart-total dl\").hide();\r\n            $(\".price-estimate-update\").fadeIn('fast');\r\n        }\r\n\r\n        $(\".changeLocation\").click(function() {\r\n            $(\"dl.calculation\").addClass(\"hidden\");\r\n            $(\".getEstimate\").html(Localization.calculate);\r\n            $(\".price-estimate-update\").fadeOut();\r\n            $(\".price-estimate\").fadeIn();\r\n\r\n        });\r\n\r\n        //TODO: Refactor the arbitrary xxxxms to an actual end of ajax call.\r\n\r\n        $(\".price-estimate-update .getEstimate\").click(function() {\r\n            if(!UtilityContainer.validateEmptyCart()) {\r\n                setTimeout(function() {\r\n                    $(\".price-estimate-update .getEstimate\").parent().fadeOut(300);\r\n                    $(\".price-estimate-update .getEstimate\").html(Localization.calculate);\r\n                }, 2250);\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    init : function() {\r\n        cartLogicContainer.setBadgeQuantity();\r\n        cartLogicContainer.loadItem();\r\n        cartLogicContainer.deleteItem();\r\n        cartLogicContainer.modifyQuantity();\r\n        cartLogicContainer.modifyQuantityBeforeBuying();\r\n        cartLogicContainer.setQuantityCookie();\r\n        cartLogicContainer.setCartSubtotal();\r\n    }\r\n};\r\n","/**\r\n * Container responsible for initializing the cart drawer feature.\r\n *\r\n * @type {{buyButtonClick: Function, getEstimateClick: Function, init: Function}}\r\n */\r\nvar cartDrawerInitContainer = {\r\n\r\n    /**\r\n     * Event triggered when a buy button is clicked.\r\n     *\r\n     */\r\n    buyButtonClick : function () {\r\n        $(\"body\").on(\"click\", \".buybutton\", function() {\r\n            cartDisplayContainer.animateIn();\r\n            cartLogicContainer.addItem(UtilityContainer.buyButton_to_Json($(this)));\r\n            cartLogicContainer.storeItem(UtilityContainer.buyButton_to_Json($(this)));\r\n\r\n            //We remove the \"Your cart is empty\" message at the top every time we add an item.\r\n            //TODO : Maybe improve it?\r\n            $(\"#cart-items .empty-cart\").addClass(\"hidden\");\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Event triggered when the Calculate button (to get a price estimate) is clicked.\r\n     *\r\n     */\r\n    getEstimateClick: function () {\r\n        $(\".getEstimate\").on(\"click\", function() {\r\n            //Fields validation + Empty cart validation.\r\n            if(UtilityContainer.validatePostCode($(\"#postcode\").val(), $(\".price-estimate #country\").val())\r\n                && UtilityContainer.validateEmptyFields([$(\"#postcode\")])\r\n                && !UtilityContainer.validateEmptyCart()) {\r\n\r\n                $(this).html('<i class=\"fa fa-spinner fa-spin\"></i>');\r\n\r\n                cartLogicContainer.ajaxCall();\r\n\r\n            }\r\n            else if (UtilityContainer.validateEmptyCart()) {\r\n                $(\"#cart-items .empty-cart\").removeClass(\"hidden\");\r\n            }\r\n            else {\r\n                UtilityContainer.addErrorClassToFieldsWithRules($(\"#postcode\"));\r\n            }\r\n        });\r\n    },\r\n\r\n    init: function () {\r\n        cartDisplayContainer.init();\r\n        cartLogicContainer.init();\r\n        cartDisplayContainer.setCartItemsHeight();\r\n\r\n        var self = cartDrawerInitContainer;\r\n        self.buyButtonClick();\r\n        self.getEstimateClick();\r\n    }\r\n\r\n}\r\n","/**\r\n * Container responsible for handling the logic of the wish list page.\r\n * Layout handled in dev/components/site/wishlist.js\r\n *\r\n * @type {{createWishlistElement: Function, renderWishlist: Function, removeWishlistElement: Function, init: Function}}\r\n */\r\nvar wishlistLogicContainer = {\r\n\r\n    /**\r\n     * Create a list layout element from the information passed as an argument.\r\n     *\r\n     * Rounding to 2 decimals, courtesy of http://stackoverflow.com/a/6134070.\r\n     *\r\n     * @param item\r\n     */\r\n    createWishlistElement: function(item) {\r\n        var self = wishlistLogicContainer,\r\n            element =\r\n            '<div class=\"col-md-12 list-layout-element\">' +\r\n            '<div class=\"col-md-2\">' +\r\n            '<img src=' + item.thumbnail_lg + '>' +\r\n            '</div>' +\r\n            '<div class=\"col-md-10\">' +\r\n            '<button class=\"btn btn-outline btn-danger-outline pull-right btn-lg inline-block padding-side-lg removeFavoriteButton\" data-product=\"' + item.product + '\">Remove from wishlist </button>' +\r\n            '<button class=\"btn btn-success buybutton pull-right btn-lg inline-block padding-side-lg\"' +\r\n            'data-product=\"' + item.product + '\"' +\r\n            'data-price=\"' + item.price + '\"' +\r\n            'data-thumbnail=\"' + item.thumbnail + '\"' +\r\n            'data-thumbnail_lg=\"' + item.thumbnail_lg + '\"' +\r\n            'data-name=\"' + item.name + '\"' +\r\n            'data-quantity=\"' + item.quantity  + '\"' + \">\" +\r\n            'Add to cart </button>' +\r\n            '<a href=' + item.link + '><h4 style=\"margin-top: 5px\">' + item.name + '</h4></a>' +\r\n            '<h5> $ ' + parseFloat(Math.round(item.price * 100) / 100).toFixed(2) + '</h5>'+\r\n            '</div>' +\r\n            '</div>';\r\n\r\n        //Localize button (default in english)\r\n        self.localizeWishlistButton();\r\n\r\n        //Append elements\r\n        $(\".list-layout-element-container\").append(element);\r\n    },\r\n\r\n    /**\r\n     * Populate the wishlist page with elements created on the fly from localStorage that has their key starting with \"_wish_prod {id}\".\r\n     * The creation is handled in createWishlistElement function.\r\n     *\r\n     */\r\n    renderWishlist: function() {\r\n        var self = wishlistLogicContainer;\r\n\r\n        for(var i = 0, length = localStorage.length; i<length; i++)\r\n        {\r\n            if (localStorage.key(i).lastIndexOf(\"_wish_product\", 0) === 0)\r\n            {\r\n                self.createWishlistElement(JSON.parse(localStorage.getItem(localStorage.key(i))));\r\n            }\r\n        }\r\n    },\r\n\r\n    localizeWishlistButton: function() {\r\n        $(\".list-layout-element .buybutton\").text(Localization.add_cart);\r\n        $(\".list-layout-element .removeFavoriteButton\").text(Localization.wishlist_remove);\r\n    },\r\n\r\n    /**\r\n     * Remove the element from the wishlist after a subtle animation.\r\n     *\r\n     */\r\n    removeWishlistElement: function () {\r\n        $(\".list-layout-element-container\").on(\"click\", \".removeFavoriteButton\", function() {\r\n            //Animate the element.\r\n            UtilityContainer.addFadeOutUpClass($(this).closest(\".list-layout-element\"));\r\n\r\n            //Delete the element from localStorage.\r\n            localStorage.removeItem(\"_wish_product \" + $(this).data(\"product\"));\r\n\r\n            //Set wishlist header quantity.\r\n            wishlistContainer.setNumberOfProductsInHeader();\r\n\r\n            //Set wishlist badge\r\n            productLayoutFavoriteContainer.setWishlistBadgeQuantity();\r\n        });\r\n    },\r\n\r\n    init: function () {\r\n        var self = wishlistLogicContainer;\r\n\r\n        //Calls the layout container (wishlistContainer).\r\n        wishlistContainer.init();\r\n\r\n        //Initialize the logic.\r\n        self.renderWishlist();\r\n        self.removeWishlistElement();\r\n    }\r\n\r\n}","/**\r\n * Entry point of script.\r\n *\r\n */\r\n$(document).ready(function () {\r\n\r\n    /**\r\n     * Sets up the ajax token for all ajax requests\r\n     *\r\n     */\r\n    $.ajaxSetup({\r\n        headers: {\r\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\r\n            'locale': $('html').attr('lang')\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Initialize checkout logic.\r\n     *\r\n     */\r\n    checkoutInitContainer.init();\r\n\r\n    /**\r\n     * Initialize cart drawer logic.\r\n     *\r\n     */\r\n    cartDrawerInitContainer.init();\r\n\r\n    /**\r\n     * Initialize category container\r\n     *\r\n     */\r\n    categoryContainer.init();\r\n\r\n    /**\r\n     * Initialize overlay plugin.\r\n     *\r\n     */\r\n    paymentOverlayContainer.init();\r\n\r\n    /**\r\n     * Initialize navigation header.\r\n     *\r\n     */\r\n    headerContainer.init();\r\n\r\n    /**\r\n     * Initialize favorite products feature.\r\n     *\r\n     */\r\n    productLayoutFavoriteContainer.init();\r\n\r\n    /**\r\n     * Initialize wishlist page.\r\n     *\r\n     */\r\n    wishlistLogicContainer.init();\r\n\r\n    /**\r\n     * Global initialization of elements.\r\n     *\r\n     */\r\n    //fancy plugin for product page (quantity input)\r\n    $(\".input-qty\").TouchSpin({\r\n        initval: 1\r\n    });\r\n\r\n});"],"sourceRoot":"/source/"}